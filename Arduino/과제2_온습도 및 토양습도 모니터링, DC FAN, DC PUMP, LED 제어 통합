#include "DHT.h"
#include <SoftPWM.h>
#include <VitconBrokerComm.h>
using namespace vitcon;

#define DHTPIN A1
#define DHTTYPE DHT22
#define SOILHUMI A6
#define LAMP 17
#define PUMP 16

SOFTPWM_DEFINE_CHANNEL(A3);

DHT dht(DHTPIN,DHTTYPE);

bool fan_out_status;
bool pump_out_status;
bool lamp_out_status;
uint32_t DataCaptureDelay = 2000;
uint32_t DataCapture_ST = 0;

int Soilhumi = 0;
float Temp;
float Humi;

void fan_out(bool val){
    fan_out_status=val;
}

void pump_out(bool val){
  pump_out_status=val;
}

void lamp_out(bool val){
  lamp_out_status=val;
}

IOTItemFlo dht22_temp;
IOTItemFlo dht22_humi;
IOTItemInt soilhumi;

IOTItemBin FanStatus;

IOTItemBin Fan(fan_out);

IOTItemBin PumpStatus;
IOTItemBin Pump(pump_out);

IOTItemBin LampStatus;
IOTItemBin Lamp(lamp_out);

#define ITEM_COUNT 9
IOTItem *items[ITEM_COUNT] = {
  &dht22_temp, &dht22_humi, &soilhumi,
  &FanStatus, &Fan,
  &PumpStatus, &Pump,
  &LampStatus, &Lamp 
};

const char device_id[] = "68f69a8da56d06999f8b88892469858d";
BrokerComm comm(&Serial, device_id, items, ITEM_COUNT);

void setup() {
  Serial.begin(250000);
  comm.SetInterval(200);

  dht.begin();
  SoftPWM.begin(490);
  pinMode(SOILHUMI,INPUT);
  pinMode(LAMP,OUTPUT);
  pinMode(PUMP,OUTPUT);
  DataCapture_ST = millis();
}

void loop() {
  Soilhumi = map(analogRead(SOILHUMI),0,1023,100,0);

  if(millis()- DataCapture_ST > DataCaptureDelay){
    Humi = dht.readHumidity();
    Temp = dht.readTemperature();

    DataCapture_ST = millis();
  }
  if(fan_out_status == true) SoftPWM.set(100);
  else SoftPWM.set(0);
  digitalWrite(PUMP, pump_out_status);
  digitalWrite(LAMP, lamp_out_status);

  FanStatus.Set(fan_out_status);
  LampStatus.Set(digitalRead(LAMP));
  PumpStatus.Set(digitalRead(PUMP));
  
  dht22_temp.Set(Temp);
  dht22_humi.Set(Humi);
  soilhumi.Set(Soilhumi);
  comm.Run();
}
